var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","to_owned","clone_into","try_from","try_into","borrow_mut","borrow","type_id","typeid","input_event","input_absinfo","timeval","libevdev","libevdev_uinput","Opaque struct representing an evdev device","device","option","eventcode","absinfo","inputprop","eventtype","Forcibly enable an event type on this device, even if the…","evdev_rs","EV_FF_STATUS","event_type","event_code","evdev_rs::enums","bustype","logpriority","UInputDevice","Opaque struct representing an evdev uinput device","uinputdevice","from_str","readflag","from_raw","inputevent","evdev_rs::device","evdev_rs::uinput","to_string","evdev_rs::logging","evdev_rs::util","into_iter","ordering","formatter","intoiterator","DeviceId","InputEvent","GrabMode","ReadStatus","LedState","EventType","EventCode","InputProp","LogPriority","ReadFlag","EventTypeIterator","EventCodeIterator","InputPropIterator","resolution"];
searchIndex["evdev_rs"]={"doc":"Rust bindings to libevdev, an wrapper for evdev devices.","i":[[3,"Device",R[22],R[14],N,N],[3,R[29],E,R[30],N,N],[3,R[54],E,E,N,N],[3,R[45],E,E,N,N],[12,R[27],E,E,0,N],[12,"vendor",E,E,0,N],[12,"product",E,E,0,N],[12,"version",E,E,0,N],[3,"AbsInfo",E,"used by EVIOCGABS/EVIOCSABS ioctls",N,N],[12,"value",E,"latest reported value for the axis",1,N],[12,"minimum",E,"specifies minimum value for the axis",1,N],[12,"maximum",E,"specifies maximum value for the axis",1,N],[12,"fuzz",E,"specifies fuzz value that is used to filter noise from the…",1,N],[12,"flat",E,"values that are within this value will be discarded by…",1,N],[12,R[58],E,"specifies resolution for the values reported for the axis",1,N],[3,"TimeVal",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[46],E,"The event structure itself",N,N],[12,"time",E,"The time at which event occured",3,N],[12,R[24],E,E,3,N],[12,R[25],E,E,3,N],[12,"value",E,E,3,N],[4,R[47],E,E,N,N],[13,"Grab",E,"Grab the device if not currently grabbed",4,N],[13,"Ungrab",E,"Ungrab the device if currently grabbed",4,N],[4,R[48],E,E,N,N],[13,"Success",E,"`next_event` has finished without an error and an event is…",5,N],[13,"Sync",E,"Depending on the `next_event` read flag: libevdev received…",5,N],[4,R[49],E,E,N,N],[13,"On",E,"Turn the LED on",6,N],[13,"Off",E,"Turn the LED off",6,N],[0,R[15],E,E,N,N],[3,"Device",R[36],R[14],N,N],[11,"new",E,"Initialize a new libevdev device.",7,[[],[[R[16],[R[15]]],[R[15]]]]],[11,"new_from_fd",E,"Initialize a new libevdev device from the given fd.",7,[[["file"]],[[R[0],[R[15],"errno"]],["errno"],[R[15]]]]],[11,"name",E,E,7,[[["self"]],[["str"],[R[16],["str"]]]]],[11,"phys",E,E,7,[[["self"]],[["str"],[R[16],["str"]]]]],[11,"uniq",E,E,7,[[["self"]],[["str"],[R[16],["str"]]]]],[11,"set_name",E,E,7,[[["self"],["str"]]]],[11,"set_phys",E,E,7,[[["self"],["str"]]]],[11,"set_uniq",E,E,7,[[["self"],["str"]]]],[11,"fd",E,"Returns the file associated with the device",7,[[["self"]],[["file"],[R[16],["file"]]]]],[11,"set_fd",E,"Set the file for this struct and initialize internal data.",7,[[["self"],["file"]],[[R[0],["errno"]],["errno"]]]],[11,"change_fd",E,"Change the fd for this device, without re-reading the…",7,[[["self"],["file"]],[[R[0],["errno"]],["errno"]]]],[11,"grab",E,"Grab or ungrab the device through a kernel EVIOCGRAB.",7,[[["self"],["grabmode"]],[[R[0],["errno"]],["errno"]]]],[11,"abs_info",E,"Get the axis info for the given axis, as advertised by the…",7,[[["self"],[R[17]]],[[R[16],[R[18]]],[R[18]]]]],[11,"set_abs_info",E,"Change the abs info for the given EV_ABS event code, if…",7,[[["self"],[R[17]],[R[18]]]]],[11,"has",E,"Returns `true` if device support the…",7,[[["self"],["any"]],["bool"]]],[11,"enable",E,"Forcibly enable an EventType/InputProp on this device,…",7,[[["self"],["any"]],[[R[0],["errno"]],["errno"]]]],[11,"has_property",E,"Returns `true` if device support the property and false…",7,[[["self"],[R[19]]],["bool"]]],[11,"enable_property",E,"Enables this property, a call to `set_fd` will overwrite…",7,[[["self"],[R[19]]],[[R[0],["errno"]],["errno"]]]],[11,"has_event_type",E,"Returns `true` is the device support this event type and…",7,[[["self"],[R[20]]],["bool"]]],[11,"has_event_code",E,"Return `true` is the device support this event type and…",7,[[["self"],[R[17]]],["bool"]]],[11,"event_value",E,"Returns the current value of the event type.",7,[[["self"],[R[17]]],[[R[16],["i32"]],["i32"]]]],[11,"set_event_value",E,"Set the value for a given event type and code.",7,[[["self"],[R[17]],["i32"]],[[R[0],["errno"]],["errno"]]]],[11,"has_event_pending",E,"Check if there are events waiting for us.",7,[[["self"]],["bool"]]],[11,"product_id",E,E,7,[[["self"]],["u16"]]],[11,"vendor_id",E,E,7,[[["self"]],["u16"]]],[11,R[27],E,E,7,[[["self"]],["u16"]]],[11,"version",E,E,7,[[["self"]],["u16"]]],[11,"set_product_id",E,E,7,[[["self"],["u16"]]]],[11,"set_vendor_id",E,E,7,[[["self"],["u16"]]]],[11,"set_bustype",E,E,7,[[["self"],["u16"]]]],[11,"set_version",E,E,7,[[["self"],["u16"]]]],[11,"driver_version",E,"Return the driver version of a device already intialize…",7,[[["self"]],["i32"]]],[11,"abs_minimum",E,E,7,[[["self"],["u32"]],[["i32"],["errno"],[R[0],["i32","errno"]]]]],[11,"abs_maximum",E,E,7,[[["self"],["u32"]],[["i32"],["errno"],[R[0],["i32","errno"]]]]],[11,"abs_fuzz",E,E,7,[[["self"],["u32"]],[["i32"],["errno"],[R[0],["i32","errno"]]]]],[11,"abs_flat",E,E,7,[[["self"],["u32"]],[["i32"],["errno"],[R[0],["i32","errno"]]]]],[11,"abs_resolution",E,E,7,[[["self"],["u32"]],[["i32"],["errno"],[R[0],["i32","errno"]]]]],[11,"set_abs_minimum",E,E,7,[[["self"],["u32"],["i32"]]]],[11,"set_abs_maximum",E,E,7,[[["self"],["u32"],["i32"]]]],[11,"set_abs_fuzz",E,E,7,[[["self"],["u32"],["i32"]]]],[11,"set_abs_flat",E,E,7,[[["self"],["u32"],["i32"]]]],[11,"set_abs_resolution",E,E,7,[[["self"],["u32"],["i32"]]]],[11,"slot_value",E,"Return the current value of the code for the given slot.",7,[[["self"],["u32"],[R[17]]],[[R[16],["i32"]],["i32"]]]],[11,"set_slot_value",E,"Set the value for a given code for the given slot.",7,[[["self"],["u32"],[R[17]],["i32"]],[[R[0],["errno"]],["errno"]]]],[11,"num_slots",E,"Get the number of slots supported by this device.",7,[[["self"]],[[R[16],["i32"]],["i32"]]]],[11,"current_slot",E,"Get the currently active slot.",7,[[["self"]],[[R[16],["i32"]],["i32"]]]],[11,"enable_event_type",E,R[21],7,[[["self"],[R[20]]],[[R[0],["errno"]],["errno"]]]],[11,"enable_event_code",E,R[21],7,[[["self"],[R[17]],[R[16],["any"]],["any"]],[[R[0],["errno"]],["errno"]]]],[11,"disable",E,"Forcibly disable an EventType/EventCode on this device,…",7,[[["self"],["any"]],[[R[0],["errno"]],["errno"]]]],[11,"disable_event_type",E,"Forcibly disable an event type on this device, even if the…",7,[[["self"],[R[20]]],[[R[0],["errno"]],["errno"]]]],[11,"disable_event_code",E,"Forcibly disable an event code on this device, even if the…",7,[[["self"],[R[17]]],[[R[0],["errno"]],["errno"]]]],[11,"set_kernel_abs_info",E,"Set the device's EV_ABS axis to the value defined in the…",7,[[["self"],[R[17]],[R[18]]]]],[11,"kernel_set_led_value",E,"Turn an LED on or off.",7,[[["self"],[R[17]],["ledstate"]],[[R[0],["errno"]],["errno"]]]],[11,"set_clock_id",E,"Set the clock ID to be used for timestamps. Further events…",7,[[["self"],["i32"]],[[R[0],["errno"]],["errno"]]]],[11,"next_event",E,"Get the next event from the device. This function operates…",7,[[["self"],[R[33]]],[["errno"],[R[0],["errno"]]]]],[0,"enums",R[22],E,N,N],[4,R[50],R[26],E,N,N],[13,"EV_SYN",E,E,8,N],[13,"EV_KEY",E,E,8,N],[13,"EV_REL",E,E,8,N],[13,"EV_ABS",E,E,8,N],[13,"EV_MSC",E,E,8,N],[13,"EV_SW",E,E,8,N],[13,"EV_LED",E,E,8,N],[13,"EV_SND",E,E,8,N],[13,"EV_REP",E,E,8,N],[13,"EV_FF",E,E,8,N],[13,"EV_PWR",E,E,8,N],[13,R[23],E,E,8,N],[13,"EV_UNK",E,E,8,N],[13,"EV_MAX",E,E,8,N],[4,R[51],E,E,N,N],[13,"EV_SYN",E,E,9,N],[13,"EV_KEY",E,E,9,N],[13,"EV_REL",E,E,9,N],[13,"EV_ABS",E,E,9,N],[13,"EV_MSC",E,E,9,N],[13,"EV_SW",E,E,9,N],[13,"EV_LED",E,E,9,N],[13,"EV_SND",E,E,9,N],[13,"EV_REP",E,E,9,N],[13,"EV_FF",E,E,9,N],[13,"EV_PWR",E,E,9,N],[13,R[23],E,E,9,N],[13,"EV_UNK",E,E,9,N],[12,R[24],"evdev_rs::enums::EventCode",E,9,N],[12,R[25],E,E,9,N],[13,"EV_MAX",R[26],E,9,N],[4,"EV_REL",E,E,N,N],[13,"REL_X",E,E,10,N],[13,"REL_Y",E,E,10,N],[13,"REL_Z",E,E,10,N],[13,"REL_RX",E,E,10,N],[13,"REL_RY",E,E,10,N],[13,"REL_RZ",E,E,10,N],[13,"REL_HWHEEL",E,E,10,N],[13,"REL_DIAL",E,E,10,N],[13,"REL_WHEEL",E,E,10,N],[13,"REL_MISC",E,E,10,N],[13,"REL_MAX",E,E,10,N],[4,"EV_ABS",E,E,N,N],[13,"ABS_X",E,E,11,N],[13,"ABS_Y",E,E,11,N],[13,"ABS_Z",E,E,11,N],[13,"ABS_RX",E,E,11,N],[13,"ABS_RY",E,E,11,N],[13,"ABS_RZ",E,E,11,N],[13,"ABS_THROTTLE",E,E,11,N],[13,"ABS_RUDDER",E,E,11,N],[13,"ABS_WHEEL",E,E,11,N],[13,"ABS_GAS",E,E,11,N],[13,"ABS_BRAKE",E,E,11,N],[13,"ABS_HAT0X",E,E,11,N],[13,"ABS_HAT0Y",E,E,11,N],[13,"ABS_HAT1X",E,E,11,N],[13,"ABS_HAT1Y",E,E,11,N],[13,"ABS_HAT2X",E,E,11,N],[13,"ABS_HAT2Y",E,E,11,N],[13,"ABS_HAT3X",E,E,11,N],[13,"ABS_HAT3Y",E,E,11,N],[13,"ABS_PRESSURE",E,E,11,N],[13,"ABS_DISTANCE",E,E,11,N],[13,"ABS_TILT_X",E,E,11,N],[13,"ABS_TILT_Y",E,E,11,N],[13,"ABS_TOOL_WIDTH",E,E,11,N],[13,"ABS_VOLUME",E,E,11,N],[13,"ABS_MISC",E,E,11,N],[13,"ABS_MT_SLOT",E,E,11,N],[13,"ABS_MT_TOUCH_MAJOR",E,E,11,N],[13,"ABS_MT_TOUCH_MINOR",E,E,11,N],[13,"ABS_MT_WIDTH_MAJOR",E,E,11,N],[13,"ABS_MT_WIDTH_MINOR",E,E,11,N],[13,"ABS_MT_ORIENTATION",E,E,11,N],[13,"ABS_MT_POSITION_X",E,E,11,N],[13,"ABS_MT_POSITION_Y",E,E,11,N],[13,"ABS_MT_TOOL_TYPE",E,E,11,N],[13,"ABS_MT_BLOB_ID",E,E,11,N],[13,"ABS_MT_TRACKING_ID",E,E,11,N],[13,"ABS_MT_PRESSURE",E,E,11,N],[13,"ABS_MT_DISTANCE",E,E,11,N],[13,"ABS_MT_TOOL_X",E,E,11,N],[13,"ABS_MT_TOOL_Y",E,E,11,N],[13,"ABS_MAX",E,E,11,N],[4,"EV_KEY",E,E,N,N],[13,"KEY_RESERVED",E,E,12,N],[13,"KEY_ESC",E,E,12,N],[13,"KEY_1",E,E,12,N],[13,"KEY_2",E,E,12,N],[13,"KEY_3",E,E,12,N],[13,"KEY_4",E,E,12,N],[13,"KEY_5",E,E,12,N],[13,"KEY_6",E,E,12,N],[13,"KEY_7",E,E,12,N],[13,"KEY_8",E,E,12,N],[13,"KEY_9",E,E,12,N],[13,"KEY_0",E,E,12,N],[13,"KEY_MINUS",E,E,12,N],[13,"KEY_EQUAL",E,E,12,N],[13,"KEY_BACKSPACE",E,E,12,N],[13,"KEY_TAB",E,E,12,N],[13,"KEY_Q",E,E,12,N],[13,"KEY_W",E,E,12,N],[13,"KEY_E",E,E,12,N],[13,"KEY_R",E,E,12,N],[13,"KEY_T",E,E,12,N],[13,"KEY_Y",E,E,12,N],[13,"KEY_U",E,E,12,N],[13,"KEY_I",E,E,12,N],[13,"KEY_O",E,E,12,N],[13,"KEY_P",E,E,12,N],[13,"KEY_LEFTBRACE",E,E,12,N],[13,"KEY_RIGHTBRACE",E,E,12,N],[13,"KEY_ENTER",E,E,12,N],[13,"KEY_LEFTCTRL",E,E,12,N],[13,"KEY_A",E,E,12,N],[13,"KEY_S",E,E,12,N],[13,"KEY_D",E,E,12,N],[13,"KEY_F",E,E,12,N],[13,"KEY_G",E,E,12,N],[13,"KEY_H",E,E,12,N],[13,"KEY_J",E,E,12,N],[13,"KEY_K",E,E,12,N],[13,"KEY_L",E,E,12,N],[13,"KEY_SEMICOLON",E,E,12,N],[13,"KEY_APOSTROPHE",E,E,12,N],[13,"KEY_GRAVE",E,E,12,N],[13,"KEY_LEFTSHIFT",E,E,12,N],[13,"KEY_BACKSLASH",E,E,12,N],[13,"KEY_Z",E,E,12,N],[13,"KEY_X",E,E,12,N],[13,"KEY_C",E,E,12,N],[13,"KEY_V",E,E,12,N],[13,"KEY_B",E,E,12,N],[13,"KEY_N",E,E,12,N],[13,"KEY_M",E,E,12,N],[13,"KEY_COMMA",E,E,12,N],[13,"KEY_DOT",E,E,12,N],[13,"KEY_SLASH",E,E,12,N],[13,"KEY_RIGHTSHIFT",E,E,12,N],[13,"KEY_KPASTERISK",E,E,12,N],[13,"KEY_LEFTALT",E,E,12,N],[13,"KEY_SPACE",E,E,12,N],[13,"KEY_CAPSLOCK",E,E,12,N],[13,"KEY_F1",E,E,12,N],[13,"KEY_F2",E,E,12,N],[13,"KEY_F3",E,E,12,N],[13,"KEY_F4",E,E,12,N],[13,"KEY_F5",E,E,12,N],[13,"KEY_F6",E,E,12,N],[13,"KEY_F7",E,E,12,N],[13,"KEY_F8",E,E,12,N],[13,"KEY_F9",E,E,12,N],[13,"KEY_F10",E,E,12,N],[13,"KEY_NUMLOCK",E,E,12,N],[13,"KEY_SCROLLLOCK",E,E,12,N],[13,"KEY_KP7",E,E,12,N],[13,"KEY_KP8",E,E,12,N],[13,"KEY_KP9",E,E,12,N],[13,"KEY_KPMINUS",E,E,12,N],[13,"KEY_KP4",E,E,12,N],[13,"KEY_KP5",E,E,12,N],[13,"KEY_KP6",E,E,12,N],[13,"KEY_KPPLUS",E,E,12,N],[13,"KEY_KP1",E,E,12,N],[13,"KEY_KP2",E,E,12,N],[13,"KEY_KP3",E,E,12,N],[13,"KEY_KP0",E,E,12,N],[13,"KEY_KPDOT",E,E,12,N],[13,"KEY_ZENKAKUHANKAKU",E,E,12,N],[13,"KEY_102ND",E,E,12,N],[13,"KEY_F11",E,E,12,N],[13,"KEY_F12",E,E,12,N],[13,"KEY_RO",E,E,12,N],[13,"KEY_KATAKANA",E,E,12,N],[13,"KEY_HIRAGANA",E,E,12,N],[13,"KEY_HENKAN",E,E,12,N],[13,"KEY_KATAKANAHIRAGANA",E,E,12,N],[13,"KEY_MUHENKAN",E,E,12,N],[13,"KEY_KPJPCOMMA",E,E,12,N],[13,"KEY_KPENTER",E,E,12,N],[13,"KEY_RIGHTCTRL",E,E,12,N],[13,"KEY_KPSLASH",E,E,12,N],[13,"KEY_SYSRQ",E,E,12,N],[13,"KEY_RIGHTALT",E,E,12,N],[13,"KEY_LINEFEED",E,E,12,N],[13,"KEY_HOME",E,E,12,N],[13,"KEY_UP",E,E,12,N],[13,"KEY_PAGEUP",E,E,12,N],[13,"KEY_LEFT",E,E,12,N],[13,"KEY_RIGHT",E,E,12,N],[13,"KEY_END",E,E,12,N],[13,"KEY_DOWN",E,E,12,N],[13,"KEY_PAGEDOWN",E,E,12,N],[13,"KEY_INSERT",E,E,12,N],[13,"KEY_DELETE",E,E,12,N],[13,"KEY_MACRO",E,E,12,N],[13,"KEY_MUTE",E,E,12,N],[13,"KEY_VOLUMEDOWN",E,E,12,N],[13,"KEY_VOLUMEUP",E,E,12,N],[13,"KEY_POWER",E,E,12,N],[13,"KEY_KPEQUAL",E,E,12,N],[13,"KEY_KPPLUSMINUS",E,E,12,N],[13,"KEY_PAUSE",E,E,12,N],[13,"KEY_SCALE",E,E,12,N],[13,"KEY_KPCOMMA",E,E,12,N],[13,"KEY_HANGEUL",E,E,12,N],[13,"KEY_HANJA",E,E,12,N],[13,"KEY_YEN",E,E,12,N],[13,"KEY_LEFTMETA",E,E,12,N],[13,"KEY_RIGHTMETA",E,E,12,N],[13,"KEY_COMPOSE",E,E,12,N],[13,"KEY_STOP",E,E,12,N],[13,"KEY_AGAIN",E,E,12,N],[13,"KEY_PROPS",E,E,12,N],[13,"KEY_UNDO",E,E,12,N],[13,"KEY_FRONT",E,E,12,N],[13,"KEY_COPY",E,E,12,N],[13,"KEY_OPEN",E,E,12,N],[13,"KEY_PASTE",E,E,12,N],[13,"KEY_FIND",E,E,12,N],[13,"KEY_CUT",E,E,12,N],[13,"KEY_HELP",E,E,12,N],[13,"KEY_MENU",E,E,12,N],[13,"KEY_CALC",E,E,12,N],[13,"KEY_SETUP",E,E,12,N],[13,"KEY_SLEEP",E,E,12,N],[13,"KEY_WAKEUP",E,E,12,N],[13,"KEY_FILE",E,E,12,N],[13,"KEY_SENDFILE",E,E,12,N],[13,"KEY_DELETEFILE",E,E,12,N],[13,"KEY_XFER",E,E,12,N],[13,"KEY_PROG1",E,E,12,N],[13,"KEY_PROG2",E,E,12,N],[13,"KEY_WWW",E,E,12,N],[13,"KEY_MSDOS",E,E,12,N],[13,"KEY_COFFEE",E,E,12,N],[13,"KEY_ROTATE_DISPLAY",E,E,12,N],[13,"KEY_CYCLEWINDOWS",E,E,12,N],[13,"KEY_MAIL",E,E,12,N],[13,"KEY_BOOKMARKS",E,E,12,N],[13,"KEY_COMPUTER",E,E,12,N],[13,"KEY_BACK",E,E,12,N],[13,"KEY_FORWARD",E,E,12,N],[13,"KEY_CLOSECD",E,E,12,N],[13,"KEY_EJECTCD",E,E,12,N],[13,"KEY_EJECTCLOSECD",E,E,12,N],[13,"KEY_NEXTSONG",E,E,12,N],[13,"KEY_PLAYPAUSE",E,E,12,N],[13,"KEY_PREVIOUSSONG",E,E,12,N],[13,"KEY_STOPCD",E,E,12,N],[13,"KEY_RECORD",E,E,12,N],[13,"KEY_REWIND",E,E,12,N],[13,"KEY_PHONE",E,E,12,N],[13,"KEY_ISO",E,E,12,N],[13,"KEY_CONFIG",E,E,12,N],[13,"KEY_HOMEPAGE",E,E,12,N],[13,"KEY_REFRESH",E,E,12,N],[13,"KEY_EXIT",E,E,12,N],[13,"KEY_MOVE",E,E,12,N],[13,"KEY_EDIT",E,E,12,N],[13,"KEY_SCROLLUP",E,E,12,N],[13,"KEY_SCROLLDOWN",E,E,12,N],[13,"KEY_KPLEFTPAREN",E,E,12,N],[13,"KEY_KPRIGHTPAREN",E,E,12,N],[13,"KEY_NEW",E,E,12,N],[13,"KEY_REDO",E,E,12,N],[13,"KEY_F13",E,E,12,N],[13,"KEY_F14",E,E,12,N],[13,"KEY_F15",E,E,12,N],[13,"KEY_F16",E,E,12,N],[13,"KEY_F17",E,E,12,N],[13,"KEY_F18",E,E,12,N],[13,"KEY_F19",E,E,12,N],[13,"KEY_F20",E,E,12,N],[13,"KEY_F21",E,E,12,N],[13,"KEY_F22",E,E,12,N],[13,"KEY_F23",E,E,12,N],[13,"KEY_F24",E,E,12,N],[13,"KEY_PLAYCD",E,E,12,N],[13,"KEY_PAUSECD",E,E,12,N],[13,"KEY_PROG3",E,E,12,N],[13,"KEY_PROG4",E,E,12,N],[13,"KEY_DASHBOARD",E,E,12,N],[13,"KEY_SUSPEND",E,E,12,N],[13,"KEY_CLOSE",E,E,12,N],[13,"KEY_PLAY",E,E,12,N],[13,"KEY_FASTFORWARD",E,E,12,N],[13,"KEY_BASSBOOST",E,E,12,N],[13,"KEY_PRINT",E,E,12,N],[13,"KEY_HP",E,E,12,N],[13,"KEY_CAMERA",E,E,12,N],[13,"KEY_SOUND",E,E,12,N],[13,"KEY_QUESTION",E,E,12,N],[13,"KEY_EMAIL",E,E,12,N],[13,"KEY_CHAT",E,E,12,N],[13,"KEY_SEARCH",E,E,12,N],[13,"KEY_CONNECT",E,E,12,N],[13,"KEY_FINANCE",E,E,12,N],[13,"KEY_SPORT",E,E,12,N],[13,"KEY_SHOP",E,E,12,N],[13,"KEY_ALTERASE",E,E,12,N],[13,"KEY_CANCEL",E,E,12,N],[13,"KEY_BRIGHTNESSDOWN",E,E,12,N],[13,"KEY_BRIGHTNESSUP",E,E,12,N],[13,"KEY_MEDIA",E,E,12,N],[13,"KEY_SWITCHVIDEOMODE",E,E,12,N],[13,"KEY_KBDILLUMTOGGLE",E,E,12,N],[13,"KEY_KBDILLUMDOWN",E,E,12,N],[13,"KEY_KBDILLUMUP",E,E,12,N],[13,"KEY_SEND",E,E,12,N],[13,"KEY_REPLY",E,E,12,N],[13,"KEY_FORWARDMAIL",E,E,12,N],[13,"KEY_SAVE",E,E,12,N],[13,"KEY_DOCUMENTS",E,E,12,N],[13,"KEY_BATTERY",E,E,12,N],[13,"KEY_BLUETOOTH",E,E,12,N],[13,"KEY_WLAN",E,E,12,N],[13,"KEY_UWB",E,E,12,N],[13,"KEY_UNKNOWN",E,E,12,N],[13,"KEY_VIDEO_NEXT",E,E,12,N],[13,"KEY_VIDEO_PREV",E,E,12,N],[13,"KEY_BRIGHTNESS_CYCLE",E,E,12,N],[13,"KEY_BRIGHTNESS_AUTO",E,E,12,N],[13,"KEY_DISPLAY_OFF",E,E,12,N],[13,"KEY_WWAN",E,E,12,N],[13,"KEY_RFKILL",E,E,12,N],[13,"KEY_MICMUTE",E,E,12,N],[13,"KEY_OK",E,E,12,N],[13,"KEY_SELECT",E,E,12,N],[13,"KEY_GOTO",E,E,12,N],[13,"KEY_CLEAR",E,E,12,N],[13,"KEY_POWER2",E,E,12,N],[13,"KEY_OPTION",E,E,12,N],[13,"KEY_INFO",E,E,12,N],[13,"KEY_TIME",E,E,12,N],[13,"KEY_VENDOR",E,E,12,N],[13,"KEY_ARCHIVE",E,E,12,N],[13,"KEY_PROGRAM",E,E,12,N],[13,"KEY_CHANNEL",E,E,12,N],[13,"KEY_FAVORITES",E,E,12,N],[13,"KEY_EPG",E,E,12,N],[13,"KEY_PVR",E,E,12,N],[13,"KEY_MHP",E,E,12,N],[13,"KEY_LANGUAGE",E,E,12,N],[13,"KEY_TITLE",E,E,12,N],[13,"KEY_SUBTITLE",E,E,12,N],[13,"KEY_ANGLE",E,E,12,N],[13,"KEY_ZOOM",E,E,12,N],[13,"KEY_MODE",E,E,12,N],[13,"KEY_KEYBOARD",E,E,12,N],[13,"KEY_SCREEN",E,E,12,N],[13,"KEY_PC",E,E,12,N],[13,"KEY_TV",E,E,12,N],[13,"KEY_TV2",E,E,12,N],[13,"KEY_VCR",E,E,12,N],[13,"KEY_VCR2",E,E,12,N],[13,"KEY_SAT",E,E,12,N],[13,"KEY_SAT2",E,E,12,N],[13,"KEY_CD",E,E,12,N],[13,"KEY_TAPE",E,E,12,N],[13,"KEY_RADIO",E,E,12,N],[13,"KEY_TUNER",E,E,12,N],[13,"KEY_PLAYER",E,E,12,N],[13,"KEY_TEXT",E,E,12,N],[13,"KEY_DVD",E,E,12,N],[13,"KEY_AUX",E,E,12,N],[13,"KEY_MP3",E,E,12,N],[13,"KEY_AUDIO",E,E,12,N],[13,"KEY_VIDEO",E,E,12,N],[13,"KEY_DIRECTORY",E,E,12,N],[13,"KEY_LIST",E,E,12,N],[13,"KEY_MEMO",E,E,12,N],[13,"KEY_CALENDAR",E,E,12,N],[13,"KEY_RED",E,E,12,N],[13,"KEY_GREEN",E,E,12,N],[13,"KEY_YELLOW",E,E,12,N],[13,"KEY_BLUE",E,E,12,N],[13,"KEY_CHANNELUP",E,E,12,N],[13,"KEY_CHANNELDOWN",E,E,12,N],[13,"KEY_FIRST",E,E,12,N],[13,"KEY_LAST",E,E,12,N],[13,"KEY_AB",E,E,12,N],[13,"KEY_NEXT",E,E,12,N],[13,"KEY_RESTART",E,E,12,N],[13,"KEY_SLOW",E,E,12,N],[13,"KEY_SHUFFLE",E,E,12,N],[13,"KEY_BREAK",E,E,12,N],[13,"KEY_PREVIOUS",E,E,12,N],[13,"KEY_DIGITS",E,E,12,N],[13,"KEY_TEEN",E,E,12,N],[13,"KEY_TWEN",E,E,12,N],[13,"KEY_VIDEOPHONE",E,E,12,N],[13,"KEY_GAMES",E,E,12,N],[13,"KEY_ZOOMIN",E,E,12,N],[13,"KEY_ZOOMOUT",E,E,12,N],[13,"KEY_ZOOMRESET",E,E,12,N],[13,"KEY_WORDPROCESSOR",E,E,12,N],[13,"KEY_EDITOR",E,E,12,N],[13,"KEY_SPREADSHEET",E,E,12,N],[13,"KEY_GRAPHICSEDITOR",E,E,12,N],[13,"KEY_PRESENTATION",E,E,12,N],[13,"KEY_DATABASE",E,E,12,N],[13,"KEY_NEWS",E,E,12,N],[13,"KEY_VOICEMAIL",E,E,12,N],[13,"KEY_ADDRESSBOOK",E,E,12,N],[13,"KEY_MESSENGER",E,E,12,N],[13,"KEY_DISPLAYTOGGLE",E,E,12,N],[13,"KEY_SPELLCHECK",E,E,12,N],[13,"KEY_LOGOFF",E,E,12,N],[13,"KEY_DOLLAR",E,E,12,N],[13,"KEY_EURO",E,E,12,N],[13,"KEY_FRAMEBACK",E,E,12,N],[13,"KEY_FRAMEFORWARD",E,E,12,N],[13,"KEY_CONTEXT_MENU",E,E,12,N],[13,"KEY_MEDIA_REPEAT",E,E,12,N],[13,"KEY_10CHANNELSUP",E,E,12,N],[13,"KEY_10CHANNELSDOWN",E,E,12,N],[13,"KEY_IMAGES",E,E,12,N],[13,"KEY_DEL_EOL",E,E,12,N],[13,"KEY_DEL_EOS",E,E,12,N],[13,"KEY_INS_LINE",E,E,12,N],[13,"KEY_DEL_LINE",E,E,12,N],[13,"KEY_FN",E,E,12,N],[13,"KEY_FN_ESC",E,E,12,N],[13,"KEY_FN_F1",E,E,12,N],[13,"KEY_FN_F2",E,E,12,N],[13,"KEY_FN_F3",E,E,12,N],[13,"KEY_FN_F4",E,E,12,N],[13,"KEY_FN_F5",E,E,12,N],[13,"KEY_FN_F6",E,E,12,N],[13,"KEY_FN_F7",E,E,12,N],[13,"KEY_FN_F8",E,E,12,N],[13,"KEY_FN_F9",E,E,12,N],[13,"KEY_FN_F10",E,E,12,N],[13,"KEY_FN_F11",E,E,12,N],[13,"KEY_FN_F12",E,E,12,N],[13,"KEY_FN_1",E,E,12,N],[13,"KEY_FN_2",E,E,12,N],[13,"KEY_FN_D",E,E,12,N],[13,"KEY_FN_E",E,E,12,N],[13,"KEY_FN_F",E,E,12,N],[13,"KEY_FN_S",E,E,12,N],[13,"KEY_FN_B",E,E,12,N],[13,"KEY_BRL_DOT1",E,E,12,N],[13,"KEY_BRL_DOT2",E,E,12,N],[13,"KEY_BRL_DOT3",E,E,12,N],[13,"KEY_BRL_DOT4",E,E,12,N],[13,"KEY_BRL_DOT5",E,E,12,N],[13,"KEY_BRL_DOT6",E,E,12,N],[13,"KEY_BRL_DOT7",E,E,12,N],[13,"KEY_BRL_DOT8",E,E,12,N],[13,"KEY_BRL_DOT9",E,E,12,N],[13,"KEY_BRL_DOT10",E,E,12,N],[13,"KEY_NUMERIC_0",E,E,12,N],[13,"KEY_NUMERIC_1",E,E,12,N],[13,"KEY_NUMERIC_2",E,E,12,N],[13,"KEY_NUMERIC_3",E,E,12,N],[13,"KEY_NUMERIC_4",E,E,12,N],[13,"KEY_NUMERIC_5",E,E,12,N],[13,"KEY_NUMERIC_6",E,E,12,N],[13,"KEY_NUMERIC_7",E,E,12,N],[13,"KEY_NUMERIC_8",E,E,12,N],[13,"KEY_NUMERIC_9",E,E,12,N],[13,"KEY_NUMERIC_STAR",E,E,12,N],[13,"KEY_NUMERIC_POUND",E,E,12,N],[13,"KEY_NUMERIC_A",E,E,12,N],[13,"KEY_NUMERIC_B",E,E,12,N],[13,"KEY_NUMERIC_C",E,E,12,N],[13,"KEY_NUMERIC_D",E,E,12,N],[13,"KEY_CAMERA_FOCUS",E,E,12,N],[13,"KEY_WPS_BUTTON",E,E,12,N],[13,"KEY_TOUCHPAD_TOGGLE",E,E,12,N],[13,"KEY_TOUCHPAD_ON",E,E,12,N],[13,"KEY_TOUCHPAD_OFF",E,E,12,N],[13,"KEY_CAMERA_ZOOMIN",E,E,12,N],[13,"KEY_CAMERA_ZOOMOUT",E,E,12,N],[13,"KEY_CAMERA_UP",E,E,12,N],[13,"KEY_CAMERA_DOWN",E,E,12,N],[13,"KEY_CAMERA_LEFT",E,E,12,N],[13,"KEY_CAMERA_RIGHT",E,E,12,N],[13,"KEY_ATTENDANT_ON",E,E,12,N],[13,"KEY_ATTENDANT_OFF",E,E,12,N],[13,"KEY_ATTENDANT_TOGGLE",E,E,12,N],[13,"KEY_LIGHTS_TOGGLE",E,E,12,N],[13,"KEY_ALS_TOGGLE",E,E,12,N],[13,"KEY_ROTATE_LOCK_TOGGLE",E,E,12,N],[13,"KEY_BUTTONCONFIG",E,E,12,N],[13,"KEY_TASKMANAGER",E,E,12,N],[13,"KEY_JOURNAL",E,E,12,N],[13,"KEY_CONTROLPANEL",E,E,12,N],[13,"KEY_APPSELECT",E,E,12,N],[13,"KEY_SCREENSAVER",E,E,12,N],[13,"KEY_VOICECOMMAND",E,E,12,N],[13,"KEY_ASSISTANT",E,E,12,N],[13,"KEY_BRIGHTNESS_MIN",E,E,12,N],[13,"KEY_BRIGHTNESS_MAX",E,E,12,N],[13,"KEY_KBDINPUTASSIST_PREV",E,E,12,N],[13,"KEY_KBDINPUTASSIST_NEXT",E,E,12,N],[13,"KEY_KBDINPUTASSIST_PREVGROUP",E,E,12,N],[13,"KEY_KBDINPUTASSIST_NEXTGROUP",E,E,12,N],[13,"KEY_KBDINPUTASSIST_ACCEPT",E,E,12,N],[13,"KEY_KBDINPUTASSIST_CANCEL",E,E,12,N],[13,"KEY_RIGHT_UP",E,E,12,N],[13,"KEY_RIGHT_DOWN",E,E,12,N],[13,"KEY_LEFT_UP",E,E,12,N],[13,"KEY_LEFT_DOWN",E,E,12,N],[13,"KEY_ROOT_MENU",E,E,12,N],[13,"KEY_MEDIA_TOP_MENU",E,E,12,N],[13,"KEY_NUMERIC_11",E,E,12,N],[13,"KEY_NUMERIC_12",E,E,12,N],[13,"KEY_AUDIO_DESC",E,E,12,N],[13,"KEY_3D_MODE",E,E,12,N],[13,"KEY_NEXT_FAVORITE",E,E,12,N],[13,"KEY_STOP_RECORD",E,E,12,N],[13,"KEY_PAUSE_RECORD",E,E,12,N],[13,"KEY_VOD",E,E,12,N],[13,"KEY_UNMUTE",E,E,12,N],[13,"KEY_FASTREVERSE",E,E,12,N],[13,"KEY_SLOWREVERSE",E,E,12,N],[13,"KEY_DATA",E,E,12,N],[13,"KEY_ONSCREEN_KEYBOARD",E,E,12,N],[13,"KEY_MAX",E,E,12,N],[13,"BTN_0",E,E,12,N],[13,"BTN_1",E,E,12,N],[13,"BTN_2",E,E,12,N],[13,"BTN_3",E,E,12,N],[13,"BTN_4",E,E,12,N],[13,"BTN_5",E,E,12,N],[13,"BTN_6",E,E,12,N],[13,"BTN_7",E,E,12,N],[13,"BTN_8",E,E,12,N],[13,"BTN_9",E,E,12,N],[13,"BTN_LEFT",E,E,12,N],[13,"BTN_RIGHT",E,E,12,N],[13,"BTN_MIDDLE",E,E,12,N],[13,"BTN_SIDE",E,E,12,N],[13,"BTN_EXTRA",E,E,12,N],[13,"BTN_FORWARD",E,E,12,N],[13,"BTN_BACK",E,E,12,N],[13,"BTN_TASK",E,E,12,N],[13,"BTN_TRIGGER",E,E,12,N],[13,"BTN_THUMB",E,E,12,N],[13,"BTN_THUMB2",E,E,12,N],[13,"BTN_TOP",E,E,12,N],[13,"BTN_TOP2",E,E,12,N],[13,"BTN_PINKIE",E,E,12,N],[13,"BTN_BASE",E,E,12,N],[13,"BTN_BASE2",E,E,12,N],[13,"BTN_BASE3",E,E,12,N],[13,"BTN_BASE4",E,E,12,N],[13,"BTN_BASE5",E,E,12,N],[13,"BTN_BASE6",E,E,12,N],[13,"BTN_DEAD",E,E,12,N],[13,"BTN_SOUTH",E,E,12,N],[13,"BTN_EAST",E,E,12,N],[13,"BTN_C",E,E,12,N],[13,"BTN_NORTH",E,E,12,N],[13,"BTN_WEST",E,E,12,N],[13,"BTN_Z",E,E,12,N],[13,"BTN_TL",E,E,12,N],[13,"BTN_TR",E,E,12,N],[13,"BTN_TL2",E,E,12,N],[13,"BTN_TR2",E,E,12,N],[13,"BTN_SELECT",E,E,12,N],[13,"BTN_START",E,E,12,N],[13,"BTN_MODE",E,E,12,N],[13,"BTN_THUMBL",E,E,12,N],[13,"BTN_THUMBR",E,E,12,N],[13,"BTN_TOOL_PEN",E,E,12,N],[13,"BTN_TOOL_RUBBER",E,E,12,N],[13,"BTN_TOOL_BRUSH",E,E,12,N],[13,"BTN_TOOL_PENCIL",E,E,12,N],[13,"BTN_TOOL_AIRBRUSH",E,E,12,N],[13,"BTN_TOOL_FINGER",E,E,12,N],[13,"BTN_TOOL_MOUSE",E,E,12,N],[13,"BTN_TOOL_LENS",E,E,12,N],[13,"BTN_TOOL_QUINTTAP",E,E,12,N],[13,"BTN_STYLUS3",E,E,12,N],[13,"BTN_TOUCH",E,E,12,N],[13,"BTN_STYLUS",E,E,12,N],[13,"BTN_STYLUS2",E,E,12,N],[13,"BTN_TOOL_DOUBLETAP",E,E,12,N],[13,"BTN_TOOL_TRIPLETAP",E,E,12,N],[13,"BTN_TOOL_QUADTAP",E,E,12,N],[13,"BTN_GEAR_DOWN",E,E,12,N],[13,"BTN_GEAR_UP",E,E,12,N],[13,"BTN_DPAD_UP",E,E,12,N],[13,"BTN_DPAD_DOWN",E,E,12,N],[13,"BTN_DPAD_LEFT",E,E,12,N],[13,"BTN_DPAD_RIGHT",E,E,12,N],[13,"BTN_TRIGGER_HAPPY1",E,E,12,N],[13,"BTN_TRIGGER_HAPPY2",E,E,12,N],[13,"BTN_TRIGGER_HAPPY3",E,E,12,N],[13,"BTN_TRIGGER_HAPPY4",E,E,12,N],[13,"BTN_TRIGGER_HAPPY5",E,E,12,N],[13,"BTN_TRIGGER_HAPPY6",E,E,12,N],[13,"BTN_TRIGGER_HAPPY7",E,E,12,N],[13,"BTN_TRIGGER_HAPPY8",E,E,12,N],[13,"BTN_TRIGGER_HAPPY9",E,E,12,N],[13,"BTN_TRIGGER_HAPPY10",E,E,12,N],[13,"BTN_TRIGGER_HAPPY11",E,E,12,N],[13,"BTN_TRIGGER_HAPPY12",E,E,12,N],[13,"BTN_TRIGGER_HAPPY13",E,E,12,N],[13,"BTN_TRIGGER_HAPPY14",E,E,12,N],[13,"BTN_TRIGGER_HAPPY15",E,E,12,N],[13,"BTN_TRIGGER_HAPPY16",E,E,12,N],[13,"BTN_TRIGGER_HAPPY17",E,E,12,N],[13,"BTN_TRIGGER_HAPPY18",E,E,12,N],[13,"BTN_TRIGGER_HAPPY19",E,E,12,N],[13,"BTN_TRIGGER_HAPPY20",E,E,12,N],[13,"BTN_TRIGGER_HAPPY21",E,E,12,N],[13,"BTN_TRIGGER_HAPPY22",E,E,12,N],[13,"BTN_TRIGGER_HAPPY23",E,E,12,N],[13,"BTN_TRIGGER_HAPPY24",E,E,12,N],[13,"BTN_TRIGGER_HAPPY25",E,E,12,N],[13,"BTN_TRIGGER_HAPPY26",E,E,12,N],[13,"BTN_TRIGGER_HAPPY27",E,E,12,N],[13,"BTN_TRIGGER_HAPPY28",E,E,12,N],[13,"BTN_TRIGGER_HAPPY29",E,E,12,N],[13,"BTN_TRIGGER_HAPPY30",E,E,12,N],[13,"BTN_TRIGGER_HAPPY31",E,E,12,N],[13,"BTN_TRIGGER_HAPPY32",E,E,12,N],[13,"BTN_TRIGGER_HAPPY33",E,E,12,N],[13,"BTN_TRIGGER_HAPPY34",E,E,12,N],[13,"BTN_TRIGGER_HAPPY35",E,E,12,N],[13,"BTN_TRIGGER_HAPPY36",E,E,12,N],[13,"BTN_TRIGGER_HAPPY37",E,E,12,N],[13,"BTN_TRIGGER_HAPPY38",E,E,12,N],[13,"BTN_TRIGGER_HAPPY39",E,E,12,N],[13,"BTN_TRIGGER_HAPPY40",E,E,12,N],[4,"EV_LED",E,E,N,N],[13,"LED_NUML",E,E,13,N],[13,"LED_CAPSL",E,E,13,N],[13,"LED_SCROLLL",E,E,13,N],[13,"LED_COMPOSE",E,E,13,N],[13,"LED_KANA",E,E,13,N],[13,"LED_SLEEP",E,E,13,N],[13,"LED_SUSPEND",E,E,13,N],[13,"LED_MUTE",E,E,13,N],[13,"LED_MISC",E,E,13,N],[13,"LED_MAIL",E,E,13,N],[13,"LED_CHARGING",E,E,13,N],[13,"LED_MAX",E,E,13,N],[4,"EV_SND",E,E,N,N],[13,"SND_CLICK",E,E,14,N],[13,"SND_BELL",E,E,14,N],[13,"SND_TONE",E,E,14,N],[13,"SND_MAX",E,E,14,N],[4,"EV_MSC",E,E,N,N],[13,"MSC_SERIAL",E,E,15,N],[13,"MSC_PULSELED",E,E,15,N],[13,"MSC_GESTURE",E,E,15,N],[13,"MSC_RAW",E,E,15,N],[13,"MSC_SCAN",E,E,15,N],[13,"MSC_TIMESTAMP",E,E,15,N],[13,"MSC_MAX",E,E,15,N],[4,"EV_SW",E,E,N,N],[13,"SW_LID",E,E,16,N],[13,"SW_TABLET_MODE",E,E,16,N],[13,"SW_HEADPHONE_INSERT",E,E,16,N],[13,"SW_RFKILL_ALL",E,E,16,N],[13,"SW_MICROPHONE_INSERT",E,E,16,N],[13,"SW_DOCK",E,E,16,N],[13,"SW_LINEOUT_INSERT",E,E,16,N],[13,"SW_JACK_PHYSICAL_INSERT",E,E,16,N],[13,"SW_VIDEOOUT_INSERT",E,E,16,N],[13,"SW_CAMERA_LENS_COVER",E,E,16,N],[13,"SW_KEYPAD_SLIDE",E,E,16,N],[13,"SW_FRONT_PROXIMITY",E,E,16,N],[13,"SW_ROTATE_LOCK",E,E,16,N],[13,"SW_LINEIN_INSERT",E,E,16,N],[13,"SW_MUTE_DEVICE",E,E,16,N],[13,"SW_PEN_INSERTED",E,E,16,N],[4,"EV_SYN",E,E,N,N],[13,"SYN_REPORT",E,E,17,N],[13,"SYN_CONFIG",E,E,17,N],[13,"SYN_MT_REPORT",E,E,17,N],[13,"SYN_DROPPED",E,E,17,N],[13,"SYN_MAX",E,E,17,N],[4,"EV_REP",E,E,N,N],[13,"REP_DELAY",E,E,18,N],[13,"REP_PERIOD",E,E,18,N],[4,R[52],E,E,N,N],[13,"INPUT_PROP_POINTER",E,E,19,N],[13,"INPUT_PROP_DIRECT",E,E,19,N],[13,"INPUT_PROP_BUTTONPAD",E,E,19,N],[13,"INPUT_PROP_SEMI_MT",E,E,19,N],[13,"INPUT_PROP_TOPBUTTONPAD",E,E,19,N],[13,"INPUT_PROP_POINTING_STICK",E,E,19,N],[13,"INPUT_PROP_ACCELEROMETER",E,E,19,N],[13,"INPUT_PROP_MAX",E,E,19,N],[4,"EV_FF",E,E,N,N],[13,"FF_STATUS_STOPPED",E,E,20,N],[13,"FF_STATUS_PLAYING",E,E,20,N],[13,"FF_RUMBLE",E,E,20,N],[13,"FF_PERIODIC",E,E,20,N],[13,"FF_CONSTANT",E,E,20,N],[13,"FF_SPRING",E,E,20,N],[13,"FF_FRICTION",E,E,20,N],[13,"FF_DAMPER",E,E,20,N],[13,"FF_INERTIA",E,E,20,N],[13,"FF_RAMP",E,E,20,N],[13,"FF_SQUARE",E,E,20,N],[13,"FF_TRIANGLE",E,E,20,N],[13,"FF_SINE",E,E,20,N],[13,"FF_SAW_UP",E,E,20,N],[13,"FF_SAW_DOWN",E,E,20,N],[13,"FF_CUSTOM",E,E,20,N],[13,"FF_GAIN",E,E,20,N],[13,"FF_AUTOCENTER",E,E,20,N],[13,"FF_MAX",E,E,20,N],[4,"BusType",E,E,N,N],[13,"BUS_PCI",E,E,21,N],[13,"BUS_ISAPNP",E,E,21,N],[13,"BUS_USB",E,E,21,N],[13,"BUS_HIL",E,E,21,N],[13,"BUS_BLUETOOTH",E,E,21,N],[13,"BUS_VIRTUAL",E,E,21,N],[13,"BUS_ISA",E,E,21,N],[13,"BUS_I8042",E,E,21,N],[13,"BUS_XTKBD",E,E,21,N],[13,"BUS_RS232",E,E,21,N],[13,"BUS_GAMEPORT",E,E,21,N],[13,"BUS_PARPORT",E,E,21,N],[13,"BUS_AMIGA",E,E,21,N],[13,"BUS_ADB",E,E,21,N],[13,"BUS_I2C",E,E,21,N],[13,"BUS_HOST",E,E,21,N],[13,"BUS_GSC",E,E,21,N],[13,"BUS_ATARI",E,E,21,N],[13,"BUS_SPI",E,E,21,N],[13,"BUS_RMI",E,E,21,N],[13,"BUS_CEC",E,E,21,N],[13,"BUS_INTEL_ISHTP",E,E,21,N],[5,"int_to_event_type",E,E,N,[[["u32"]],[[R[20]],[R[16],[R[20]]]]]],[5,"int_to_ev_rel",E,E,N,[[["u32"]],[[R[16],["ev_rel"]],["ev_rel"]]]],[5,"int_to_ev_abs",E,E,N,[[["u32"]],[[R[16],["ev_abs"]],["ev_abs"]]]],[5,"int_to_ev_key",E,E,N,[[["u32"]],[["ev_key"],[R[16],["ev_key"]]]]],[5,"int_to_ev_led",E,E,N,[[["u32"]],[[R[16],["ev_led"]],["ev_led"]]]],[5,"int_to_ev_snd",E,E,N,[[["u32"]],[[R[16],["ev_snd"]],["ev_snd"]]]],[5,"int_to_ev_msc",E,E,N,[[["u32"]],[[R[16],["ev_msc"]],["ev_msc"]]]],[5,"int_to_ev_sw",E,E,N,[[["u32"]],[["ev_sw"],[R[16],["ev_sw"]]]]],[5,"int_to_ev_syn",E,E,N,[[["u32"]],[["ev_syn"],[R[16],["ev_syn"]]]]],[5,"int_to_ev_rep",E,E,N,[[["u32"]],[["ev_rep"],[R[16],["ev_rep"]]]]],[5,"int_to_input_prop",E,E,N,[[["u32"]],[[R[19]],[R[16],[R[19]]]]]],[5,"int_to_ev_ff",E,E,N,[[["u32"]],[["ev_ff"],[R[16],["ev_ff"]]]]],[5,"int_to_bus_type",E,E,N,[[["u32"]],[[R[16],[R[27]]],[R[27]]]]],[18,"SW_MAX",E,E,16,N],[18,"REP_MAX",E,E,18,N],[18,"FF_STATUS_MAX",E,E,20,N],[0,"logging",R[22],E,N,N],[4,R[53],R[39],E,N,N],[13,"Error",E,"critical errors and application bugs",22,N],[13,"Info",E,"informational messages",22,N],[13,"Debug",E,"debug information",22,N],[5,"set_log_priority",E,"Define the minimum level to be printed to the log handler.…",N,[[[R[28]]]]],[5,"get_log_priority",E,"Return the current log priority level. Messages higher…",N,[[],[R[28]]]],[0,"uinput",R[22],E,N,N],[3,R[29],R[37],R[30],N,N],[11,"create_from_device",E,"Create a uinput device based on the given libevdev device.",23,[[[R[15]]],[[R[0],[R[31],"errno"]],["errno"],[R[31]]]]],[11,"devnode",E,E,23,[[["self"]],[["str"],[R[16],["str"]]]]],[11,"syspath",E,E,23,[[["self"]],[["str"],[R[16],["str"]]]]],[11,"fd",E,"Return the file descriptor used to create this uinput…",23,[[["self"]],[["file"],[R[16],["file"]]]]],[11,"write_event",E,"Post an event through the uinput device.",23,[[["self"],[R[35]]],[[R[0],["errno"]],["errno"]]]],[0,"util",R[22],E,N,N],[3,R[55],R[40],E,N,N],[3,R[56],E,E,N,N],[3,R[57],E,E,N,N],[5,"event_code_to_int",E,E,N,[[[R[17]]]]],[5,"int_to_event_code",E,E,N,[[["c_uint"]],[R[17]]]],[11,"iter",R[26],E,8,[[["self"]],["eventtypeiterator"]]],[11,R[32],E,"The given type constant for the passed name or Errno if…",8,[[["str"]],[[R[20]],[R[16],[R[20]]]]]],[11,"get_max",E,"The max value defined for the given event type, e.g.…",8,[[[R[20]]],[[R[16],["i32"]],["i32"]]]],[11,"iter",E,E,9,[[["self"]],["eventcodeiterator"]]],[11,R[32],E,"Look up an event code by its type and name. Event codes…",9,[[[R[20]],["str"]],[[R[17]],[R[16],[R[17]]]]]],[11,"iter",E,E,19,[[["self"]],["inputpropiterator"]]],[11,R[32],E,"Look up an input property by its name. Properties start…",19,[[["str"]],[[R[19]],[R[16],[R[19]]]]]],[18,"SYNC",R[22],"Process data in sync mode",24,N],[18,"NORMAL",E,"Process data in normal mode",24,N],[18,"FORCE_SYNC",E,"Pretend the next event is a SYN_DROPPED and require the…",24,N],[18,"BLOCKING",E,"The fd is not in O_NONBLOCK and a read may block",24,N],[11,"empty",E,"Returns an empty set of flags",24,[[],[R[33]]]],[11,"all",E,"Returns the set containing all flags.",24,[[],[R[33]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",24,[[["self"]],["u32"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",24,[[["u32"]],[[R[16],[R[33]]],[R[33]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",24,[[["u32"]],[R[33]]]],[11,"from_bits_unchecked",E,"Convert from underlying bit representation, preserving all…",24,[[["u32"]],[R[33]]]],[11,"is_empty",E,"Returns `true` if no flags are currently stored.",24,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",24,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",24,[[["self"],[R[33]]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",24,[[["self"],[R[33]]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",24,[[["self"],[R[33]]]]],[11,"remove",E,"Removes the specified flags in-place.",24,[[["self"],[R[33]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",24,[[["self"],[R[33]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",24,[[["self"],["bool"],[R[33]]]]],[11,R[34],E,E,1,[[[R[10]]],[R[18]]]],[11,"as_raw",E,E,1,[[["self"]],[R[10]]]],[11,"new",E,E,2,[[["c_long"]],[R[11]]]],[11,R[34],E,E,2,[[[R[11]]],[R[11]]]],[11,"as_raw",E,E,2,[[["self"]],[R[11]]]],[11,"new",E,E,3,[[["i32"],[R[17]],[R[11]]],[R[35]]]],[11,R[34],E,E,3,[[[R[9]]],[R[35]]]],[11,"as_raw",E,E,3,[[["self"]],[R[9]]]],[11,"is_type",E,E,3,[[["self"],[R[20]]],["bool"]]],[11,"is_code",E,E,3,[[["self"],[R[17]]],["bool"]]],[11,"into",R[36],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[3],E,E,7,[[[U]],[R[0]]]],[11,R[4],E,E,7,[[],[R[0]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"into",R[37],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[3],E,E,23,[[[U]],[R[0]]]],[11,R[4],E,E,23,[[],[R[0]]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[R[8]]]],[11,R[1],R[22],E,24,[[["self"]],[T]]],[11,R[2],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[3],E,E,24,[[[U]],[R[0]]]],[11,R[4],E,E,24,[[],[R[0]]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[R[8]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[3],E,E,0,[[[U]],[R[0]]]],[11,R[4],E,E,0,[[],[R[0]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[3],E,E,1,[[[U]],[R[0]]]],[11,R[4],E,E,1,[[],[R[0]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,R[1],E,E,2,[[["self"]],[T]]],[11,R[2],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[3],E,E,2,[[[U]],[R[0]]]],[11,R[4],E,E,2,[[],[R[0]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,R[1],E,E,3,[[["self"]],[T]]],[11,R[2],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[3],E,E,3,[[[U]],[R[0]]]],[11,R[4],E,E,3,[[],[R[0]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[3],E,E,4,[[[U]],[R[0]]]],[11,R[4],E,E,4,[[],[R[0]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[3],E,E,5,[[[U]],[R[0]]]],[11,R[4],E,E,5,[[],[R[0]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[3],E,E,6,[[[U]],[R[0]]]],[11,R[4],E,E,6,[[],[R[0]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,R[1],R[26],E,8,[[["self"]],[T]]],[11,R[2],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[38],E,E,8,[[["self"]],["string"]]],[11,R[3],E,E,8,[[[U]],[R[0]]]],[11,R[4],E,E,8,[[],[R[0]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,R[1],E,E,9,[[["self"]],[T]]],[11,R[2],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[38],E,E,9,[[["self"]],["string"]]],[11,R[3],E,E,9,[[[U]],[R[0]]]],[11,R[4],E,E,9,[[],[R[0]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,R[1],E,E,10,[[["self"]],[T]]],[11,R[2],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[3],E,E,10,[[[U]],[R[0]]]],[11,R[4],E,E,10,[[],[R[0]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,R[1],E,E,11,[[["self"]],[T]]],[11,R[2],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[3],E,E,11,[[[U]],[R[0]]]],[11,R[4],E,E,11,[[],[R[0]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,R[1],E,E,12,[[["self"]],[T]]],[11,R[2],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[3],E,E,12,[[[U]],[R[0]]]],[11,R[4],E,E,12,[[],[R[0]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,R[1],E,E,13,[[["self"]],[T]]],[11,R[2],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[3],E,E,13,[[[U]],[R[0]]]],[11,R[4],E,E,13,[[],[R[0]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,R[1],E,E,14,[[["self"]],[T]]],[11,R[2],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[3],E,E,14,[[[U]],[R[0]]]],[11,R[4],E,E,14,[[],[R[0]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,R[1],E,E,15,[[["self"]],[T]]],[11,R[2],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[3],E,E,15,[[[U]],[R[0]]]],[11,R[4],E,E,15,[[],[R[0]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,R[1],E,E,16,[[["self"]],[T]]],[11,R[2],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[3],E,E,16,[[[U]],[R[0]]]],[11,R[4],E,E,16,[[],[R[0]]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[R[8]]]],[11,R[1],E,E,17,[[["self"]],[T]]],[11,R[2],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[3],E,E,17,[[[U]],[R[0]]]],[11,R[4],E,E,17,[[],[R[0]]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[R[8]]]],[11,R[1],E,E,18,[[["self"]],[T]]],[11,R[2],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[3],E,E,18,[[[U]],[R[0]]]],[11,R[4],E,E,18,[[],[R[0]]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[R[8]]]],[11,R[1],E,E,19,[[["self"]],[T]]],[11,R[2],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[38],E,E,19,[[["self"]],["string"]]],[11,R[3],E,E,19,[[[U]],[R[0]]]],[11,R[4],E,E,19,[[],[R[0]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,R[1],E,E,20,[[["self"]],[T]]],[11,R[2],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[3],E,E,20,[[[U]],[R[0]]]],[11,R[4],E,E,20,[[],[R[0]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,R[1],E,E,21,[[["self"]],[T]]],[11,R[2],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[3],E,E,21,[[[U]],[R[0]]]],[11,R[4],E,E,21,[[],[R[0]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,"into",R[39],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[3],E,E,22,[[[U]],[R[0]]]],[11,R[4],E,E,22,[[],[R[0]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,"into",R[40],E,25,[[],[U]]],[11,R[41],E,E,25,[[],["i"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[3],E,E,25,[[[U]],[R[0]]]],[11,R[4],E,E,25,[[],[R[0]]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[R[8]]]],[11,"into",E,E,26,[[],[U]]],[11,R[41],E,E,26,[[],["i"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[3],E,E,26,[[[U]],[R[0]]]],[11,R[4],E,E,26,[[],[R[0]]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[R[8]]]],[11,"into",E,E,27,[[],[U]]],[11,R[41],E,E,27,[[],["i"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[3],E,E,27,[[[U]],[R[0]]]],[11,R[4],E,E,27,[[],[R[0]]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[R[8]]]],[11,"drop",R[36],E,7,[[["self"]]]],[11,"drop",R[37],E,23,[[["self"]]]],[11,"clone",R[26],E,8,[[["self"]],[R[20]]]],[11,"clone",E,E,9,[[["self"]],[R[17]]]],[11,"clone",E,E,10,[[["self"]],["ev_rel"]]],[11,"clone",E,E,11,[[["self"]],["ev_abs"]]],[11,"clone",E,E,12,[[["self"]],["ev_key"]]],[11,"clone",E,E,13,[[["self"]],["ev_led"]]],[11,"clone",E,E,14,[[["self"]],["ev_snd"]]],[11,"clone",E,E,15,[[["self"]],["ev_msc"]]],[11,"clone",E,E,16,[[["self"]],["ev_sw"]]],[11,"clone",E,E,17,[[["self"]],["ev_syn"]]],[11,"clone",E,E,18,[[["self"]],["ev_rep"]]],[11,"clone",E,E,19,[[["self"]],[R[19]]]],[11,"clone",E,E,20,[[["self"]],["ev_ff"]]],[11,"clone",E,E,21,[[["self"]],[R[27]]]],[11,"clone",R[22],E,24,[[["self"]],[R[33]]]],[11,"clone",E,E,2,[[["self"]],[R[11]]]],[11,"clone",E,E,3,[[["self"]],[R[35]]]],[11,"partial_cmp",E,E,24,[[["self"],[R[33]]],[[R[16],[R[42]]],[R[42]]]]],[11,"lt",E,E,24,[[["self"],[R[33]]],["bool"]]],[11,"le",E,E,24,[[["self"],[R[33]]],["bool"]]],[11,"gt",E,E,24,[[["self"],[R[33]]],["bool"]]],[11,"ge",E,E,24,[[["self"],[R[33]]],["bool"]]],[11,"extend",E,E,24,[[["self"],[R[44]]]]],[11,"eq",R[26],E,8,[[["self"],[R[20]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[17]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[17]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["ev_rel"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["ev_abs"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["ev_key"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["ev_led"]],["bool"]]],[11,"eq",E,E,14,[[["self"],["ev_snd"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["ev_msc"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["ev_sw"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["ev_syn"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["ev_rep"]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[19]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["ev_ff"]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[27]]],["bool"]]],[11,"eq",R[22],E,24,[[["self"],[R[33]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[33]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["readstatus"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[11]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[11]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[35]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[35]]],["bool"]]],[11,"cmp",E,E,24,[[["self"],[R[33]]],[R[42]]]],[11,"next",R[40],E,25,[[["self"]],[[R[20]],[R[16],[R[20]]]]]],[11,"next",E,E,26,[[["self"]],[[R[17]],[R[16],[R[17]]]]]],[11,"next",E,E,27,[[["self"]],[[R[19]],[R[16],[R[19]]]]]],[11,"hash",R[26],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",R[22],E,24,[[["self"],["__h"]]]],[11,"sub",E,"Returns the set difference of the two sets of flags.",24,[[[R[33]]],[R[33]]]],[11,"sub_assign",E,"Disables all flags enabled in the set.",24,[[["self"],[R[33]]]]],[11,"not",E,"Returns the complement of this set of flags.",24,[[],[R[33]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",24,[[[R[33]]],[R[33]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",24,[[[R[33]]],[R[33]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",24,[[[R[33]]],[R[33]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",24,[[["self"],[R[33]]]]],[11,"bitor_assign",E,"Adds the set of flags.",24,[[["self"],[R[33]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",24,[[["self"],[R[33]]]]],[11,"fmt",R[26],E,8,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",R[22],E,24,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",R[26],E,8,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[43]]],[R[0]]]],[11,"from_iter",R[22],E,24,[[[R[44]]],[R[33]]]],[11,"fmt",E,E,24,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[43]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[43]]],[R[0]]]]],"p":[[3,R[45]],[3,"AbsInfo"],[3,"TimeVal"],[3,R[46]],[4,R[47]],[4,R[48]],[4,R[49]],[3,"Device"],[4,R[50]],[4,R[51]],[4,"EV_REL"],[4,"EV_ABS"],[4,"EV_KEY"],[4,"EV_LED"],[4,"EV_SND"],[4,"EV_MSC"],[4,"EV_SW"],[4,"EV_SYN"],[4,"EV_REP"],[4,R[52]],[4,"EV_FF"],[4,"BusType"],[4,R[53]],[3,R[29]],[3,R[54]],[3,R[55]],[3,R[56]],[3,R[57]]]};
searchIndex["evdev_sys"]={"doc":E,"i":[[3,R[11],"evdev_sys",E,N,N],[12,"tv_sec",E,E,0,N],[12,"tv_usec",E,E,0,N],[3,R[9],E,E,N,N],[12,"time",E,E,1,N],[12,"type_",E,E,1,N],[12,"code",E,E,1,N],[12,"value",E,E,1,N],[3,R[10],E,E,N,N],[12,"value",E,E,2,N],[12,"minimum",E,E,2,N],[12,"maximum",E,E,2,N],[12,"fuzz",E,E,2,N],[12,"flat",E,E,2,N],[12,R[58],E,E,2,N],[3,"va_list",E,E,N,N],[4,R[12],E,E,N,N],[4,R[13],E,E,N,N],[5,"libevdev_new",E,E,N,N],[5,"libevdev_new_from_fd",E,E,N,N],[5,"libevdev_free",E,E,N,N],[5,"libevdev_set_log_function",E,E,N,N],[5,"libevdev_set_log_priority",E,E,N,N],[5,"libevdev_get_log_priority",E,E,N,N],[5,"libevdev_set_device_log_function",E,E,N,N],[5,"libevdev_grab",E,E,N,N],[5,"libevdev_set_fd",E,E,N,N],[5,"libevdev_change_fd",E,E,N,N],[5,"libevdev_get_fd",E,E,N,N],[5,"libevdev_next_event",E,E,N,N],[5,"libevdev_has_event_pending",E,E,N,N],[5,"libevdev_get_name",E,E,N,N],[5,"libevdev_set_name",E,E,N,N],[5,"libevdev_get_phys",E,E,N,N],[5,"libevdev_set_phys",E,E,N,N],[5,"libevdev_get_uniq",E,E,N,N],[5,"libevdev_set_uniq",E,E,N,N],[5,"libevdev_get_id_product",E,E,N,N],[5,"libevdev_set_id_product",E,E,N,N],[5,"libevdev_get_id_vendor",E,E,N,N],[5,"libevdev_set_id_vendor",E,E,N,N],[5,"libevdev_get_id_bustype",E,E,N,N],[5,"libevdev_set_id_bustype",E,E,N,N],[5,"libevdev_get_id_version",E,E,N,N],[5,"libevdev_set_id_version",E,E,N,N],[5,"libevdev_get_driver_version",E,E,N,N],[5,"libevdev_has_property",E,E,N,N],[5,"libevdev_enable_property",E,E,N,N],[5,"libevdev_has_event_type",E,E,N,N],[5,"libevdev_has_event_code",E,E,N,N],[5,"libevdev_get_abs_minimum",E,E,N,N],[5,"libevdev_get_abs_maximum",E,E,N,N],[5,"libevdev_get_abs_fuzz",E,E,N,N],[5,"libevdev_get_abs_flat",E,E,N,N],[5,"libevdev_get_abs_resolution",E,E,N,N],[5,"libevdev_get_abs_info",E,E,N,N],[5,"libevdev_get_event_value",E,E,N,N],[5,"libevdev_set_event_value",E,E,N,N],[5,"libevdev_fetch_event_value",E,E,N,N],[5,"libevdev_get_slot_value",E,E,N,N],[5,"libevdev_set_slot_value",E,E,N,N],[5,"libevdev_fetch_slot_value",E,E,N,N],[5,"libevdev_get_num_slots",E,E,N,N],[5,"libevdev_get_current_slot",E,E,N,N],[5,"libevdev_set_abs_minimum",E,E,N,N],[5,"libevdev_set_abs_maximum",E,E,N,N],[5,"libevdev_set_abs_fuzz",E,E,N,N],[5,"libevdev_set_abs_flat",E,E,N,N],[5,"libevdev_set_abs_resolution",E,E,N,N],[5,"libevdev_set_abs_info",E,E,N,N],[5,"libevdev_enable_event_type",E,E,N,N],[5,"libevdev_disable_event_type",E,E,N,N],[5,"libevdev_enable_event_code",E,E,N,N],[5,"libevdev_disable_event_code",E,E,N,N],[5,"libevdev_kernel_set_abs_info",E,E,N,N],[5,"libevdev_kernel_set_led_value",E,E,N,N],[5,"libevdev_kernel_set_led_values",E,E,N,N],[5,"libevdev_set_clock_id",E,E,N,N],[5,"libevdev_event_is_type",E,E,N,N],[5,"libevdev_event_is_code",E,E,N,N],[5,"libevdev_event_type_get_name",E,E,N,N],[5,"libevdev_event_code_get_name",E,E,N,N],[5,"libevdev_property_get_name",E,E,N,N],[5,"libevdev_event_type_get_max",E,E,N,N],[5,"libevdev_event_type_from_name",E,E,N,N],[5,"libevdev_event_type_from_name_n",E,E,N,N],[5,"libevdev_event_code_from_name",E,E,N,N],[5,"libevdev_event_code_from_name_n",E,E,N,N],[5,"libevdev_property_from_name",E,E,N,N],[5,"libevdev_property_from_name_n",E,E,N,N],[5,"libevdev_get_repeat",E,E,N,N],[5,"libevdev_uinput_create_from_device",E,E,N,N],[5,"libevdev_uinput_destroy",E,E,N,N],[5,"libevdev_uinput_get_devnode",E,E,N,N],[5,"libevdev_uinput_get_fd",E,E,N,N],[5,"libevdev_uinput_get_syspath",E,E,N,N],[5,"libevdev_uinput_write_event",E,E,N,N],[6,"__enum_ty",E,E,N,N],[6,"libevdev_read_flag",E,E,N,N],[6,"libevdev_log_priority",E,E,N,N],[6,"libevdev_grab_mode",E,E,N,N],[6,"libevdev_read_status",E,E,N,N],[6,"libevdev_led_value",E,E,N,N],[6,"libevdev_uinput_open_mode",E,E,N,N],[17,"LIBEVDEV_READ_FLAG_SYNC",E,E,N,N],[17,"LIBEVDEV_READ_FLAG_NORMAL",E,E,N,N],[17,"LIBEVDEV_READ_FLAG_FORCE_SYNC",E,E,N,N],[17,"LIBEVDEV_READ_FLAG_BLOCKING",E,E,N,N],[17,"LIBEVDEV_LOG_ERROR",E,E,N,N],[17,"LIBEVDEV_LOG_INFO",E,E,N,N],[17,"LIBEVDEV_LOG_DEBUG",E,E,N,N],[17,"LIBEVDEV_GRAB",E,E,N,N],[17,"LIBEVDEV_UNGRAB",E,E,N,N],[17,"LIBEVDEV_READ_STATUS_SUCCESS",E,E,N,N],[17,"LIBEVDEV_READ_STATUS_SYNC",E,E,N,N],[17,"LIBEVDEV_LED_ON",E,E,N,N],[17,"LIBEVDEV_LED_OFF",E,E,N,N],[17,"LIBEVDEV_UINPUT_OPEN_MANAGED",E,E,N,N],[11,R[1],E,E,0,[[["self"]],[T]]],[11,R[2],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[3],E,E,0,[[[U]],[R[0]]]],[11,R[4],E,E,0,[[],[R[0]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,R[1],E,E,1,[[["self"]],[T]]],[11,R[2],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[3],E,E,1,[[[U]],[R[0]]]],[11,R[4],E,E,1,[[],[R[0]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,R[1],E,E,2,[[["self"]],[T]]],[11,R[2],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[3],E,E,2,[[[U]],[R[0]]]],[11,R[4],E,E,2,[[],[R[0]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[3],E,E,3,[[[U]],[R[0]]]],[11,R[4],E,E,3,[[],[R[0]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[3],E,E,4,[[[U]],[R[0]]]],[11,R[4],E,E,4,[[],[R[0]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[3],E,E,5,[[[U]],[R[0]]]],[11,R[4],E,E,5,[[],[R[0]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"clone",E,E,1,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],[R[11]]]],[11,"clone",E,E,2,[[["self"]],[R[10]]]]],"p":[[3,R[11]],[3,R[9]],[3,R[10]],[3,"va_list"],[4,R[12]],[4,R[13]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);